1)PL/SQL variables naming rules:
-The variable name must be less than 31 characters. Try to make it as meaningful as possible within 31 characters.
-The variable name must begin with an ASCII letter. It can be either lowercase or uppercase. Notice that PL/SQL is case-insensitive.
-Followed by the first character are any number, underscore ( _), and dollar sign ( $) characters.
-->
SET SERVEROUTPUT ON SIZE 1000000;
DECLARE
   v_first_name varchar2(20):='Anirudha';
   v_last_name varchar2(20):='Gaikwad';
   n_employee_id CONSTANT number:=103;
   d_hire_date date:='01-JAN-2022';
BEGIN
      DBMS_OUTPUT.PUT_LINE('Employee Name :'||v_first_name);
      DBMS_OUTPUT.PUT_LINE('Employee LastName :'||v_last_name);
      DBMS_OUTPUT.PUT_LINE('Employee Id :'||n_employee_id);
      DBMS_OUTPUT.PUT_LINE('Hire Date :'||d_hire_date);
      DBMS_OUTPUT.PUT_LINE('Hire Date :'||to_char(d_hire_date,'DD/MM/YYYY'));
END;

2)Anchors :PL/SQL provides you with a very useful feature called variable anchors. It refers to the use of the  %TYPE  keyword to declare a variable with the data type is associated with a columnâ€™s data type of a particular column in a table.
-->
SET SERVEROUTPUT ON SIZE 1000000;
DECLARE
  v_first_name  EMPLOYEES.FIRST_NAME%TYPE:='Anirudha';
  v_last_name   EMPLOYEES.LAST_NAME%TYPE:='Gaikwad';
  n_employee_id EMPLOYEES.EMPLOYEE_ID%TYPE:=103;
  d_hire_date   EMPLOYEES.HIRE_DATE%TYPE:='01-JAN-1902';
BEGIN
      DBMS_OUTPUT.PUT_LINE('Employee Name :'||v_first_name);
      DBMS_OUTPUT.PUT_LINE('Employee LastName :'||v_last_name);
      DBMS_OUTPUT.PUT_LINE('Employee Id :'||n_employee_id);
      DBMS_OUTPUT.PUT_LINE('Hire Date :'||d_hire_date);
      
END;

-->
SET SERVEROUTPUT ON SIZE 1000000;
DECLARE
   v_first_name EMPLOYEES.FIRST_NAME%TYPE;
   v_last_name EMPLOYEES.LAST_NAME%TYPE;
   n_employee_id EMPLOYEES.EMPLOYEE_ID%TYPE;
   d_hire_date EMPLOYEES.HIRE_DATE%TYPE;
BEGIN
   SELECT employee_id,
          first_name,
          last_name,
          hire_date
   INTO n_employee_id,
        v_first_name,
        v_last_name,
        d_hire_date
   FROM employees
   WHERE employee_id = 200;

   DBMS_OUTPUT.PUT_LINE(v_first_name);
   DBMS_OUTPUT.PUT_LINE(v_last_name);
   DBMS_OUTPUT.PUT_LINE(d_hire_date);
END;


3)In PL/SQL, NULL means an unknown value so it has some special characteristics as follows:
-NULL is not equal to anything, even itself NULL.
-NULL is not greater than or less than anything else, even NULL.
